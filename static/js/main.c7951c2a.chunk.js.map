{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/UpdateTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","updateSignal","onAddshow","important","onDoubleClick","id","cursor","day","href","textInfor","Tasks","tasks","map","AddTask","useState","setTitle","setDay","setTextInfor","setImportant","onSubmit","e","preventDefault","length","alert","type","placeholder","value","onChange","target","checked","currentTarget","UpdateTask","App","showAddTask","setShowAddTask","setTasks","signal","setSignal","setID","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","addTask","method","headers","body","JSON","stringify","deleteTask","filter","updateTask","updTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAEMA,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAE5B,OACE,wBACEA,QAASA,EACTC,MAAO,CAAEC,gBAAiBJ,GAC1BK,UAAU,MAHZ,SAKGJ,KAKPF,EAAOO,aAAe,CACpBN,MAAO,aASMD,QCrBTQ,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAE9B,OACE,yBAAQL,UAAU,SAAlB,UACE,6BAAKG,IACL,cAAC,EAAD,CAAQR,MAAM,QAAQE,QAASO,EAAOR,KAAMS,EAAU,gBAAkB,yBAK9EH,EAAOD,aAAe,CACpBE,MAAO,gBAOMD,QCDAI,EAnBF,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,aAC5B,OADyD,EAAfC,WAExB,sBAAKV,UAAS,eAAUO,EAAKI,UAAY,YAAc,IAAMC,cAAe,kBAAOH,EAAaF,EAAKM,KAArG,UACb,+BAAKN,EAAKJ,MACR,qBAAKL,MAAO,CAACH,MAAO,MAAOmB,OAAQ,WACnCjB,QAAW,kBAAMW,EAASD,EAAKM,KAD/B,uBAKD,4BACEN,EAAKQ,MAER,mBAAGC,KAAMT,EAAKU,UAAd,SACGV,EAAKU,gBCFFC,EAXD,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,MAAOX,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,UAC7C,OACE,8BACGS,EAAMC,KAAI,SAACb,GAAD,OACT,cAAC,EAAD,CAAoBA,KAAMA,EAC1BC,SAAUA,EAAUC,aAAcA,EAAcC,UAAWA,GADhDH,EAAKM,UCyDTQ,EA7DC,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MAAY,EACHkB,mBAAS,IADN,mBACtBnB,EADsB,KACfoB,EADe,OAEPD,mBAAS,IAFF,mBAEtBP,EAFsB,KAEjBS,EAFiB,OAGKF,mBAAS,IAHd,mBAGtBL,EAHsB,KAGXQ,EAHW,OAIKH,oBAAS,GAJd,mBAItBX,EAJsB,KAIXe,EAJW,KA6B7B,OACE,uBAAM1B,UAAU,WAAW2B,SAxBZ,SAACC,GAChBA,EAAEC,iBACE1B,EAAM2B,OAAS,GACjBC,MAAM,6CAGH5B,EAIDc,EAAUa,OAAS,IACrBC,MAAM,sEAIR3B,EAAM,CAACD,QAAOY,MAAKE,YAAWN,cAE9BY,EAAS,IACTC,EAAO,IACPC,EAAa,IACbC,GAAa,IAbXK,MAAM,wBAiBR,UACE,sBAAK/B,UAAU,eAAf,UACE,0CACA,uBAAOgC,KAAK,OAAOC,YAAY,WAC/BC,MAAO/B,EAAOgC,SAAU,SAACP,GAAD,OAAOL,EAASK,EAAEQ,OAAOF,aAGnD,sBAAKlC,UAAU,eAAf,UACE,yCACA,uBAAOgC,KAAK,iBACZE,MAAOnB,EAAKoB,SAAU,SAACP,GAAD,OAAOJ,EAAOI,EAAEQ,OAAOF,aAG/C,sBAAKlC,UAAU,eAAf,UACE,8CACA,uBAAOgC,KAAK,MAAMC,YAAY,2BAC9BC,MAAOjB,EAAWkB,SAAU,SAACP,GAAD,OAAOH,EAAaG,EAAEQ,OAAOF,aAG3D,sBAAKlC,UAAU,kCAAf,UACE,8CACA,uBAAOgC,KAAK,WAAWK,QAAS1B,EAChCuB,MAAOvB,EAAWwB,SAAU,SAACP,GAAD,OAAOF,EAAaE,EAAEU,cAAcD,eAIlE,uBAAOL,KAAK,SAASE,MAAM,mBAAmBlC,UAAU,sBCK/CuC,EA7DI,SAAC,GAAe,IAAbnC,EAAY,EAAZA,MAAY,EACNkB,mBAAS,IADH,mBACzBnB,EADyB,KAClBoB,EADkB,OAEVD,mBAAS,IAFC,mBAEzBP,EAFyB,KAEpBS,EAFoB,OAGEF,mBAAS,IAHX,mBAGzBL,EAHyB,KAGdQ,EAHc,OAIEH,oBAAS,GAJX,mBAIzBX,EAJyB,KAIde,EAJc,KA6BhC,OACE,uBAAM1B,UAAU,WAAW2B,SAxBZ,SAACC,GAChBA,EAAEC,iBACE1B,EAAM2B,OAAS,GACjBC,MAAM,6CAGH5B,GASLC,EAAM,CAACD,QAAOY,MAAKE,YAAWN,cAE9BY,EAAS,IACTC,EAAO,IACPC,EAAa,IACbC,GAAa,IAbXK,MAAM,wBAiBR,UACE,sBAAK/B,UAAU,eAAf,UACE,0CACA,uBAAOgC,KAAK,OAAOC,YAAY,WAC/BC,MAAO/B,EAAOgC,SAAU,SAACP,GAAD,OAAOL,EAASK,EAAEQ,OAAOF,aAGnD,sBAAKlC,UAAU,eAAf,UACE,yCACA,uBAAOgC,KAAK,iBACZE,MAAOnB,EAAKoB,SAAU,SAACP,GAAD,OAAOJ,EAAOI,EAAEQ,OAAOF,aAG/C,sBAAKlC,UAAU,eAAf,UACE,8CACA,uBAAOgC,KAAK,MAAMC,YAAY,2BAC9BC,MAAOjB,EAAWkB,SAAU,SAACP,GAAD,OAAOH,EAAaG,EAAEQ,OAAOF,aAG3D,sBAAKlC,UAAU,kCAAf,UACE,8CACA,uBAAOgC,KAAK,WAAWK,QAAS1B,EAChCuB,MAAOvB,EAAWwB,SAAU,SAACP,GAAD,OAAOF,EAAaE,EAAEU,cAAcD,eAIlE,uBAAOL,KAAK,SAASE,MAAM,qBAAqBlC,UAAU,sBC2CjDwC,EA/FH,WAAO,IAAD,EACsBlB,oBAAS,GAD/B,mBACTmB,EADS,KACIC,EADJ,OAEUpB,mBAAS,IAFnB,mBAETH,EAFS,KAEFwB,EAFE,OAGYrB,oBAAS,GAHrB,mBAGTsB,EAHS,KAGDC,EAHC,OAIIvB,mBAAS,GAJb,mBAITT,EAJS,KAILiC,EAJK,KAMhBC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEACeC,IADf,OACTC,EADS,OAEfP,EAASO,GAFM,2CAAH,qDAKdC,KACC,IAGH,IAAMF,EAAU,uCAAG,8BAAAD,EAAA,sEACCI,MAAM,kEADP,cACXC,EADW,gBAEEA,EAAIC,OAFN,cAEXC,EAFW,yBAIVA,GAJU,2CAAH,qDAQVC,EAAO,uCAAG,WAAOjD,GAAP,iBAAAyC,EAAA,sEACII,MAAM,iEAAkE,CACxFK,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUtD,KANT,cACR8C,EADQ,gBASKA,EAAIC,OATT,OASRC,EATQ,OAWdZ,EAAS,GAAD,mBAAKxB,GAAL,CAAYoC,KAXN,2CAAH,sDAmBPO,EAAU,uCAAG,WAAOjD,GAAP,SAAAmC,EAAA,sEACCI,MAAM,kEAAD,OAAmEvC,GAAM,CAC9F4C,OAAQ,WAFO,cAKjBd,EAASxB,EAAM4C,QAAO,SAACxD,GAAD,OAAUA,EAAKM,KAAOA,MAL3B,2CAAH,sDAaVmD,EAAU,uCAAG,qCAAAhB,EAAA,6DAAQ7C,EAAR,EAAQA,MAAOY,EAAf,EAAeA,IAAKE,EAApB,EAAoBA,UAAWN,EAA/B,EAA+BA,UAC1CsD,EAAU,CAACpD,GAAIA,EAAIF,UAAWA,EAAWR,MAAOA,EACtCY,IAAKA,EAAKE,UAAWA,GAFpB,SAGCmC,MAAM,kEAAD,OAAmEvC,GAAM,CAC9F4C,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUI,KARN,cAWjBtB,EAASxB,EAAMC,KAAI,SAACb,GAAD,OAAUA,EAAKM,KAAOA,EACvC,CAACA,GAAIN,EAAKM,GAAIF,UAAWA,EAAWR,MAAOA,EAC3CY,IAAKA,EAAKE,UAAWA,GACpBV,MACFsC,GAAU,GAfM,2CAAH,sDAkBhB,OAEE,cADA,CACA,OAAK7C,UAAU,YAAf,UACE,cAAC,EAAD,CAAQG,MAAM,uBAAuBC,MAAO,kBAAIsC,GAAgBD,IAChEpC,QAASoC,IACRA,GAAe,cAAC,EAAD,CAASrC,MAAOoD,IAC/BrC,EAAMW,OAAS,EAAI,cAAC,EAAD,CAAOX,MAAOA,EAChCX,SAAUsD,EAAYrD,aA9BP,SAACI,GACpBgC,GAAU,GACVC,EAAMjC,IA6BFH,UAAW+B,IACX,yCACDG,GAAU,cAAC,EAAD,CAAYxC,MAAO4D,QC9ErBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c7951c2a.chunk.js","sourcesContent":[" import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color}}\n      className='btn'\n    >\n      {text}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n  color: 'steelblue'\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nexport default Button\n","import React from 'react'\nimport Button from './Button'\nimport PropTypes from 'prop-types'\n\nconst Header = ({ title, onAdd, showAdd}) => {\n\n  return (\n    <header className='header'>\n      <h1>{title}</h1>\n      <Button color='black' onClick={onAdd} text={showAdd ? 'Full Schedule' : 'Create a meeting'}/>\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n  title: 'Task Tracker',\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import { useState } from 'react'\n\nconst Task = ({ task, onDelete, updateSignal, onAddshow}) => {\n    return (\n        !onAddshow && <div className={`task ${task.important ? 'important' : ''}`} onDoubleClick={() =>  updateSignal(task.id)}>\n         <h3>{task.title}\n           <div style={{color: 'red', cursor: 'pointer'}}\n           onClick = {() => onDelete(task.id)}>\n             Delete\n           </div>\n         </h3>\n          <p>\n           {task.day}\n         </p>\n         <a href={task.textInfor}>\n           {task.textInfor}\n         </a>\n       </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, updateSignal, onAddshow}) => {\n  return (\n    <div>\n      {tasks.map((task) => (\n        <Task key={task.id} task={task}\n        onDelete={onDelete} updateSignal={updateSignal} onAddshow={onAddshow}/>\n      ))}\n    </div>\n  )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n  const [title, setTitle] = useState('')\n  const [day, setDay] = useState('')\n  const [textInfor, setTextInfor] = useState('')\n  const [important, setImportant] = useState(false)\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    if (title.length > 30) {\n      alert('Title can not be more than 30 characters!')\n      return\n    }\n    if (!title) {\n      alert('Please add a title!')\n      return\n    }\n    if (textInfor.length > 100) {\n      alert('The summary of your schedule can not be more than 100 characters!')\n      return\n    }\n\n    onAdd({title, day, textInfor, important})\n\n    setTitle('')\n    setDay('')\n    setTextInfor('')\n    setImportant(false)\n  }\n\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label>Title</label>\n        <input type='text' placeholder='Add Task'\n        value={title} onChange={(e) => setTitle(e.target.value)}\n        />\n      </div>\n      <div className='form-control'>\n        <label>Date</label>\n        <input type='datetime-local'\n        value={day} onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className='form-control'>\n        <label>Zoom Link</label>\n        <input type=\"url\" placeholder='Zoom link to the meeting'\n        value={textInfor} onChange={(e) => setTextInfor(e.target.value)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Important</label>\n        <input type='checkbox' checked={important}\n        value={important} onChange={(e) => setImportant(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input type='submit' value='Save Information' className='btn btn-block'/>\n    </form>\n  )\n}\n\nexport default AddTask\n","import { useState } from 'react'\n\nconst UpdateTask = ({ onAdd }) => {\n  const [title, setTitle] = useState('')\n  const [day, setDay] = useState('')\n  const [textInfor, setTextInfor] = useState('')\n  const [important, setImportant] = useState(false)\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    if (title.length > 30) {\n      alert('Title can not be more than 30 characters!')\n      return\n    }\n    if (!title) {\n      alert('Please add a title!')\n      return\n    }\n    // if (textInfor.length > 100) {\n    //   alert('The summary of your schedule can not be more than 100 characters!')\n    //   return\n    // }\n\n    onAdd({title, day, textInfor, important})\n\n    setTitle('')\n    setDay('')\n    setTextInfor('')\n    setImportant(false)\n  }\n\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label>Title</label>\n        <input type='text' placeholder='Add Task'\n        value={title} onChange={(e) => setTitle(e.target.value)}\n        />\n      </div>\n      <div className='form-control'>\n        <label>Date</label>\n        <input type='datetime-local'\n        value={day} onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className='form-control'>\n        <label>Zoom Link</label>\n        <input type=\"url\" placeholder='Zoom link to the meeting'\n        value={textInfor} onChange={(e) => setTextInfor(e.target.value)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Important</label>\n        <input type='checkbox' checked={important}\n        value={important} onChange={(e) => setImportant(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input type='submit' value='Update Information' className='btn btn-block'/>\n    </form>\n  )\n}\n\nexport default UpdateTask\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport { useState, useEffect } from 'react'\nimport AddTask from './components/AddTask'\nimport UpdateTask from './components/UpdateTask'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n  const [signal, setSignal] = useState(false)\n  const [id, setID] = useState(0)\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('https://my-json-server.typicode.com/xu1998hz/JSON_Server/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  // Add task\n  const addTask = async (task) => {\n    const res = await fetch('https://my-json-server.typicode.com/xu1998hz/JSON_Server/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n    // const id = Math.max.apply(Math, tasks.map(function(ele) { return ele.id; }))+1\n    // const newTask = {id, ...task}\n    // console.log(newTask)\n    // setTasks([...tasks, newTask])\n  }\n\n  // Delete a Task with all filter\n  const deleteTask = async (id) => {\n    const res = await fetch(`https://my-json-server.typicode.com/xu1998hz/JSON_Server/tasks/${id}`, {\n      method: 'DELETE',\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  const updateSignal = (id) => {\n    setSignal(true)\n    setID(id)\n  }\n  // Toggle Reminder\n  const updateTask = async ({title, day, textInfor, important}) => {\n    const updTask = {id: id, important: important, title: title,\n                    day: day, textInfor: textInfor}\n    const res = await fetch(`https://my-json-server.typicode.com/xu1998hz/JSON_Server/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updTask),\n    })\n\n    setTasks(tasks.map((task) => task.id === id ?\n      {id: task.id, important: important, title: title,\n      day: day, textInfor: textInfor}\n     : task))\n     setSignal(false)\n  }\n\n  return (\n    // Must return a single parent element\n    <div className=\"container\">\n      <Header title='Zoom Meeting Manager' onAdd={()=>setShowAddTask(!showAddTask)}\n      showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? <Tasks tasks={tasks}\n        onDelete={deleteTask} updateSignal={updateSignal}\n        onAddshow={showAddTask}/>\n      : 'No available schedules at this momemnt'}\n      {signal && <UpdateTask onAdd={updateTask}/>}\n    </div>\n  );\n}\n\n// class App extends React.Component {\n//   render() {\n//     return <h1>Hello from a class</h1>;\n//   }\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}